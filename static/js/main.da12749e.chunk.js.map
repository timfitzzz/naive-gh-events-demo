{"version":3,"sources":["npm-logo.svg","gh.svg","Header.js","ToggleSwitch.js","DropDownSelector.js","SourceSelector.js","OptionsPanel.js","DisplayOptions.js","EventsDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderContainer","styled","div","NaiveEventsTitle","NaiveEventsDescriptionContainer","NaiveEventsDescription","NaiveEventsDescriptionTitle","NaiveIcon","img","Header","href","src","GHlogo","Npmlogo","ToggleButtonLabel","label","ToggleButtonInput","input","ToggleButtonSlider","span","p","state","ToggleSwitch","name","toggleCb","type","value","onClick","e","preventDefault","DropDownContainer","DropDownTopContainer","DropDownDescription","DropDownSelector","description","disabled","options","setter","setAsNumber","onChange","console","log","parseInt","target","map","option","defaultValue","SourceSelectorContainer","SourceSelectorItemContainer","SourceSelectorLabel","SourceSelectorRadioButton","current","SourceSelectorInputField","SourceSelectorInputSaveButton","button","SourceSelector","source","setSource","useState","active","setActive","inputValue","setInputValue","handleSubmit","useEffect","placeholder","OptionsContainer","ToggleSwitchesContainer","ToggleSwitchContainer","ToggleLabel","DropDownsContainer","descriptionsTable","collapse","dateSummaries","dateContent","md","omitContent","indentContent","newLinesBetween","sortBy","groupStartDay","groupByDays","dateTimeFormatOptions","startDate","reverseSortEvents","droptions","OptionsPanelTitle","OptionsPanel","sourceControls","changeOptions","dateTimeFormatState","setDateTimeFormatState","toggle","switchName","Object","getOwnPropertyNames","filter","n","toggleName","sortby","DateTime","DisplayOptionsContainer","DisplayOptionsPanelTitle","DisplayOptionsToggleSwitch","DisplayOptions","display","setDisplay","EventsListContainer","EventsListHeader","EventsList","ReactMarkdown","LoadingContainer","LoadingText","PlainEventsList","PlainEventsLine","EventsGroupDate","EventsDisplay","loaded","setLoaded","events","setEvents","Date","DATE_FULL","setOptions","axios","request","then","data","renderedEventGroups","useMemo","Naive","renderEvents","newOptionsFragment","assign","event","i","endDate","renderedEventCollections","join","plainEntry","hanging","AppOuterContainer","AppInnerContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da12749e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/npm-logo.3cad4cc6.svg\";","export default __webpack_public_path__ + \"static/media/gh.04be58c1.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport Npmlogo from './npm-logo.svg'\nimport GHlogo from './gh.svg'\n\nconst HeaderContainer = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: left;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-self: baseline;\n  font-size: 30px;\n  width: 100%;\n  font-weight: bolder;\n  color: purple;\n  box-sizing: border-box;\n`\n\nconst NaiveEventsTitle = styled.div`\n  margin-bottom: auto;\n  margin-top: auto;\n  font-size: 20px;\n  \n`\n\nconst NaiveEventsDescriptionContainer = styled.div`\n  border: 2px solid thistle;\n\n  margin: 4px 0 4px auto;\n  border-radius: 10px;\n  padding: 4px 0px 8px 8px;\n\n\n  @media (min-width: 600px) {\n    width: 45%;\n  }\n  @media (max-width: 599px) {\n    width: 100%;\n  }\n`\n\nconst NaiveEventsDescription = styled.div`\n  font-size: 12px;\n  font-weight: normal;\n\n\n`\n\nconst NaiveEventsDescriptionTitle = styled.div`\n  font-weight: bold;\n  display: flex;\n  flex-direction: row;\n  margin-top: 0px;\n  margin-bottom: 4px;\n  font-size: 12px;\n  align-content: center;\n  a {\n    > span {\n      margin-top: auto;\n      bottom: auto;\n    }\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n`\n\n\nconst NaiveIcon = styled.img`\n  max-height: 15px;\n  margin-left: 5px;\n`\n\n\n\nexport const Header = () => {\n\n  return (\n    <HeaderContainer>\n      <NaiveEventsTitle>naive-gh-events demo</NaiveEventsTitle>\n      <NaiveEventsDescriptionContainer>\n        <NaiveEventsDescriptionTitle>\n          <a href=\"https://github.com/timfitzzz/naive-gh-events\">\n          naive-gh-events</a>\n          <a href=\"https://github.com/timfitzzz/naive-gh-events\"><NaiveIcon src={GHlogo}/>\n          </a><a href=\"https://www.npmjs.com/package/naive-gh-events\">\n          <NaiveIcon src={Npmlogo}/></a>\n        </NaiveEventsDescriptionTitle>       \n        <NaiveEventsDescription>\n          Render event objects from the GitHub API as natural English, in plaintext or markdown. By <a href={\"https://github.com/timfitzzz\"}>timfitzzz</a>.\n\n        </NaiveEventsDescription>\n      </NaiveEventsDescriptionContainer>\n    </HeaderContainer>\n  )\n\n}\n\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\n\nconst ToggleButtonLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  min-width: 30px;\n  height: 17px;\n`\n\nconst ToggleButtonInput = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n  &:checked {\n    background-color: #2196F3\n  }\n\n  &:focus {\n    box-shadow: 0 0 1px #2196F3;\n  }\n`\n\nconst ToggleButtonSlider = styled.span`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .2s;\n  transition: .2s;\n  border-radius: 20px;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    height: 13px;\n    width: 13px;\n    left: 2px;\n    bottom: 2px;\n    background-color: white;\n    -webkit-transition: .2s;\n    transition: .2s;\n    border-radius: 50%;\n\n    ${p => p.state ? `\n      -webkit-transform: translateX(13px);\n      -ms-transform: translateX(13px);\n      transform: translateX(13px);\n    ` : ''}\n  }\n\n  ${p => p.state ? `\n    background-color: purple;\n    box-shadow: 0 0 1px #2196F3;\n  ` : '' }\n`\nconst ToggleSwitch = ({name, toggleCb, state}) => {\n  \n  return (\n    <ToggleButtonLabel> \n      <ToggleButtonInput type={'checkbox'} value={state} onClick={(e) => { e.preventDefault(); toggleCb(name)}}/>\n      <ToggleButtonSlider state={state}/>\n    </ToggleButtonLabel>\n  )\n}\n\nexport default ToggleSwitch","import React from 'react'\nimport styled from 'styled-components'\n\nconst DropDownContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 5px;\n  padding-top: 5px;\n  padding-left: 2px;\n  font-size: 10px;\n  margin-top: 0;\n  box-sizing: border-box;\n\n  @media (max-width: 599px) {\n    min-width: 47%;\n  }\n  @media (min-width: 600px) {\n    min-width: 20%;\n  }\n\n  select {\n    font-size: 10px;\n  }\n`\n\nconst DropDownTopContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 0;\n  margin-bottom: auto;\n  > span {\n\n    margin-right: 10px;\n  }\n`\n\nconst DropDownDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 10px;\n  font-weight: normal;\n  margin-top: 1px;\n`\n\nconst DropDownSelector = ({description, disabled, name, options, state, setter, setAsNumber}) => {\n\n  return (\n    <DropDownContainer>\n      <DropDownTopContainer>\n        <span>{name}</span>\n        <select disabled={disabled} name={name} onChange={(e) => { console.log(e); setter({ [name]: setAsNumber ? parseInt(e.target.value) : e.target.value })}}>\n          { options.map(option => \n            <option key={'option'+option.value} value={option.value} defaultValue={option.value === state ? true : false}>{option.description}</option>\n          )}\n        </select>\n      </DropDownTopContainer>\n      <DropDownDescription>\n        {description}\n      </DropDownDescription>\n    </DropDownContainer>\n\n  )\n}\n\nexport default DropDownSelector","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst SourceSelectorContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 10px;\n  margin-bottom: 5px;\n`\n\nconst SourceSelectorItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-right: 20px;\n`\n\nconst SourceSelectorLabel = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n`\n\nconst SourceSelectorRadioButton = styled.div`\n\n  height: 10px;\n  width: 10px;\n  border-radius: 50%;\n  border: 3px solid purple;\n  background-color: ${p => p.current ? 'white' : 'purple'};\n  margin-top: auto;\n  margin-bottom: auto;\n  margin-right: 5px;\n\n`\n\nconst SourceSelectorInputField = styled.input`\n  font-size: 10px;\n`\n\nconst SourceSelectorInputSaveButton = styled.button`\n  font-size: 10px;\n`\n\n\nexport const SourceSelector = ({source, setSource}) => {\n\n  let [active, setActive] = useState(source ? true : false)\n  let [inputValue, setInputValue] = useState(\"\"\n  )\n  useEffect(() => {\n    if (source) {\n      setActive(true)\n    }\n  }, [source])\n\n  function selectDefault() {\n    setActive(false)\n    setSource(null)\n  }\n\n  function handleInputValueChange(e) {\n    setInputValue(e.target.value)\n  }\n  \n  function handleSubmit(e) {\n    setSource(inputValue)\n    setActive(true)\n  }\n\n\n  return (\n    <SourceSelectorContainer>\n      <SourceSelectorItemContainer>\n        <SourceSelectorRadioButton onClick={() => selectDefault()} current={source || active ? false : true}/> <SourceSelectorLabel>use GitHub public events feed</SourceSelectorLabel>\n      </SourceSelectorItemContainer>\n      <SourceSelectorItemContainer>\n        <SourceSelectorRadioButton onClick={(e) => {inputValue && setActive(true); handleSubmit(e)}} current={source || active ? true : false}/><SourceSelectorInputField value={inputValue} onChange={handleInputValueChange} placeholder={\"Github User Public Feed\"}/><SourceSelectorInputSaveButton onClick={handleSubmit} disabled={inputValue ? false : true}>get feed</SourceSelectorInputSaveButton>\n      </SourceSelectorItemContainer>\n    </SourceSelectorContainer>\n\n  )\n\n\n}","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { DateTime } from 'luxon'\n\nimport ToggleSwitch from './ToggleSwitch'\nimport DropDownSelector from './DropDownSelector'\nimport { SourceSelector } from './SourceSelector'\n\nconst OptionsContainer = styled.div`\n  background-color: thistle;\n  padding: 2px 8px 8px 8px;\n  border-radius: 8px;\n  width: 100%;\n`\n\nexport const ToggleSwitchesContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\n\nexport const ToggleSwitchContainer = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  margin-bottom: 5px;\n`\n\nexport const ToggleLabel = styled.div`\n\n  font-size: 10px;\n  margin-left: 6px;\n  margin-top: 0;\n  margin-bottom: auto;\n  > span {\n    font-weight: normal;\n    margin-left: 5px;\n  }\n\n`\n\nconst DropDownsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-bottom: 5px;\n  max-width: 700px;\n  margin-top: 5px;\n  align-items: top;\n  justify-content: space-between;\n`\n\n\n\nlet descriptionsTable = {\n  collapse: 'combine similar events',\n  dateSummaries: 'prepend dates to summary lines',\n  dateContent: 'prepend dates to content lines',\n  md: 'render as markdown',\n  omitContent: 'display only summaries',\n  indentContent: 'indent content lines',\n  newLinesBetween: 'add extra line between items',\n  sortBy: 'display order',\n  groupStartDay: 'day of week to start first group from',\n  groupByDays: 'number of days of events to group together',\n  dateTimeFormatOptions: 'example Luxon display format',\n  startDate: 'filter out prior events',\n  reverseSortEvents: 'reverse sortBy'\n}\n\nconst droptions = {\n  sortBy: [\n    { value: 'date', description: 'date'},\n    { value: 'actor', description: 'actor (user)'},\n    { value: 'type', description: 'event type'},\n    { value: 'parent', description: 'parent of action'}\n  ],\n  groupByDays: [\n    { value: 1, description: '1 day'},\n    { value: 3, description: '3 days'},\n    { value: 7, description: '7 days'},\n    { value: 14, description: '14 days'},\n    { value: 30, description: '30 days'}\n  ],\n  groupStartDay: [\n    { value: 0, description: 'sunday'},\n    { value: 1, description: 'monday'},\n    { value: 2, description: 'tuesday'},\n    { value: 3, description: 'wednesday'},\n    { value: 4, description: 'thursday'},\n    { value: 5, description: 'friday'},\n    { value: 6, description: 'saturday'}\n  ],\n  dateTimeFormatOptions: [\n    { value: 'DATE_FULL', description: 'month, day, year'},\n    { value: 'DATETIME_FULL', description: 'month, day, year, time'},\n    { value: 'DATETIME_FULL_WITH_SECONDS', description: 'month, day, year, time:seconds'}\n  ]\n}\n\nexport const OptionsPanelTitle = styled.div`\n  font-size: 16px;\n  margin-bottom: 8px;\n`\n\nexport const OptionsPanel = ({sourceControls, changeOptions, options}) => {\n\n  let [dateTimeFormatState, setDateTimeFormatState] = useState('DATE_FULL')\n  let [source, setSource] = sourceControls\n\n  function toggle(switchName) {\n    changeOptions({ [switchName]: !options[switchName]})\n  }\n\n  function setDateTimeFormat({ dateTimeFormatOptions }) {\n    setDateTimeFormatState(dateTimeFormatOptions)\n    changeOptions({ dateTimeFormatOptions: DateTime[dateTimeFormatOptions]})\n  }\n\n  return (\n    <OptionsContainer>\n      <OptionsPanelTitle>source</OptionsPanelTitle>\n      <SourceSelector source={source} setSource={setSource} />\n      <OptionsPanelTitle>render options</OptionsPanelTitle>\n      <ToggleSwitchesContainer>\n            { Object.getOwnPropertyNames(options).filter(n => typeof options[n] === 'boolean').map(toggleName =>\n            <ToggleSwitchContainer key={toggleName+'toggler'}>\n              <ToggleSwitch name={toggleName} toggleCb={toggle} state={options[toggleName]}/>\n              <ToggleLabel>{toggleName}<span>{descriptionsTable[toggleName]}</span></ToggleLabel>\n            </ToggleSwitchContainer>\n\n            )}\n      </ToggleSwitchesContainer>\n      <DropDownsContainer>\n          <DropDownSelector description={descriptionsTable.sortby} name={'sortBy'} options={droptions['sortBy']} state={options['sortBy']} setter={changeOptions}/>\n          <DropDownSelector description={descriptionsTable.groupByDays} name={'groupByDays'} options={droptions['groupByDays']} state={options['groupByDays']} setter={changeOptions} setAsNumber={true}/>\n          <DropDownSelector description={descriptionsTable.groupStartDay} name={'groupStartDay'} options={droptions['groupStartDay']} state={options['groupStartDay']} setter={changeOptions} setAsNumber={true}/>\n          <DropDownSelector description={descriptionsTable.dateTimeFormatOptions} name={'dateTimeFormatOptions'} options={droptions['dateTimeFormatOptions']} state={dateTimeFormatState} setter={setDateTimeFormat}/>\n      </DropDownsContainer>\n    </OptionsContainer>\n  )\n\n\n}\n\nexport default OptionsPanel","import React from 'react'\nimport styled from 'styled-components'\nimport ToggleSwitch from './ToggleSwitch'\nimport { ToggleSwitchContainer, ToggleLabel } from './OptionsPanel'\n\n\nconst DisplayOptionsContainer = styled.div`\n  background-color: white;\n  padding: 2px 8px 8px 8px;\n  border-radius: 8px;\n  border: 1px solid thistle;\n  width: 100%;\n  margin-top: 4px;\n`\n\nexport const DisplayOptionsPanelTitle = styled.div`\n  font-size: 16px;\n  margin-bottom: 8px;\n`\n\nexport const DisplayOptionsToggleSwitch = styled(ToggleSwitch)`\n  div { \n    color: purple;\n  }\n`\n\n\nexport const DisplayOptions = ({display, setDisplay}) => \n  <DisplayOptionsContainer>\n    <DisplayOptionsPanelTitle>display options</DisplayOptionsPanelTitle>\n    <ToggleSwitchContainer>\n      <DisplayOptionsToggleSwitch name={'render markdown via react-markdown'} toggleCb={() => setDisplay(!display)} state={display} />\n      <ToggleLabel><span>render markdown as html via <a href=\"https://github.com/remarkjs/react-markdown\">react-markdown</a> or show raw</span></ToggleLabel>\n    </ToggleSwitchContainer>\n    \n  </DisplayOptionsContainer>\n\nexport default DisplayOptions","import React, { useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios';\nimport Naive from 'naive-gh-events'\nimport ReactMarkdown from 'react-markdown'\nimport { DateTime } from 'luxon'\n\nimport OptionsPanel from './OptionsPanel'\nimport DisplayOptions from './DisplayOptions'\n\nconst EventsListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst EventsListHeader = styled.div`\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  justify-self: baseline;\n  font-size: 30px;\n  width: 100%;\n  font-weight: bolder;\n  color: purple;\n`\n\nconst EventsList = styled(ReactMarkdown)`\n  max-width: 700px;\n  margin-left: 8px;\n  margin-right: 8px;\n  text-align: left;\n  font-size: 12px;\n  word-wrap: normal;\n\n  a {\n      color: purple;\n    }\n\n  a {\n    font-weight: bold;\n  }\n\n  ul {\n    margin-left: 20px;\n    padding-left: 5px;\n    border-left: 1px solid black;\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n    border-bottom-left-radius: 5px;\n    border-top-left-radius: 5px;\n    list-style: none;\n  }\n\n  li {\n    padding: 5px;\n    padding-left: 10px;\n    margin-bottom: 5px;\n    background-color: purple;\n    color: white;\n\n    img {\n      width: 100%;\n    }\n\n    a {\n      color: thistle;\n    }\n\n    &:last-of-type {\n      margin-bottom: 0px;\n    }\n  }\n\n  > p {\n    &:first-of-type {\n      margin-top: 8px;\n    }\n  }\n`\n\nconst LoadingContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst LoadingText = styled.div`\n  margin: 20px auto auto auto;\n`\n\nconst PlainEventsList = styled.div`\n  font-family: monospace;\n  max-width: 700px;\n  overflow: wrap;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: left;\n  font-size: 12px;\n  margin-top: 14px;\n`\n\nconst PlainEventsLine = styled.div`\n  white-space: pre-wrap;       /* css-3 */\n  white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */\n  white-space: -pre-wrap;      /* Opera 4-6 */\n  white-space: -o-pre-wrap;    /* Opera 7 */\n  word-wrap: break-word;       /* Internet Explorer 5.5+ */\n`\n\nconst EventsGroupDate = styled.div`\n  text-align: left;\n  font-size: 15px;\n  width: 100%;\n  display: inline-block;\n  margin-top: 20px;\n  font-weight: bold;\n  color: purple;\n`\n\nconst EventsDisplay = () => {\n  \n  let [loaded, setLoaded] = useState(false)\n  let [events, setEvents] = useState(null)\n  let [options, setOptions] = useState({\n    sortBy: 'date',\n    collapse: true,\n    dateSummaries: false,\n    dateContent: false,\n    groupByDays: 7,\n    groupStartDay: 0,\n    startDate: new Date(1/1/1970),\n    md: true,\n    omitContent: false,\n    indentContent: true,\n    dateTimeFormatOptions: DateTime.DATE_FULL,\n    newLinesBetween: true,\n    reverseSortEvents: false\n  })\n  let [source, setSource] = useState(null)\n  let [display, setDisplay] = useState(true)\n\n  function changeOptions(newOptionsFragment) {\n    setOptions(Object.assign({}, options, newOptionsFragment))\n  }\n\n  useEffect(()=> {\n      axios.request(source ? `https://api.github.com/users/${source}/events?per_page=100` : 'https://api.github.com/events?per_page=100').then(data =>         {\n          setEvents(data.data)\n          setLoaded(true)\n        })\n  }, [loaded, source])\n  \n  const renderedEventGroups = useMemo(() => {\n    return events ? Naive.renderEvents(events, options) : null\n  }, [events, options])\n\n  return (\n    <EventsListContainer>\n      <EventsListHeader>\n        <OptionsPanel sourceControls={[source, setSource]} changeOptions={changeOptions} options={options}/>\n        <DisplayOptions display={display} setDisplay={setDisplay}/>\n      </EventsListHeader>\n      \n      { renderedEventGroups && renderedEventGroups.map((event, i) => {\n        return options.md ? (\n            display ? (\n            <div key={'event'+ i}>\n              <EventsGroupDate>{event.startDate} - {event.endDate}</EventsGroupDate>\n              <EventsList>{event.renderedEventCollections.join(\"\")}</EventsList>\n            </div>\n          ) : <PlainEventsList>{event.renderedEventCollections.map((plainEntry, i) => <PlainEventsLine hanging={i === 0 ? false : true}>{plainEntry}</PlainEventsLine>)}</PlainEventsList>\n        ): (\n          <PlainEventsList>{event.renderedEventCollections.map((plainEntry, i) => <PlainEventsLine hanging={i === 0 ? false : true}>{plainEntry}</PlainEventsLine>)}</PlainEventsList>\n        )\n      })}\n      { !loaded && (\n        <LoadingContainer>\n          <LoadingText>Loading...</LoadingText>\n        </LoadingContainer>\n      )}\n    </EventsListContainer>\n  )\n}\n\nexport default EventsDisplay","import styled from 'styled-components'\nimport Header from './Header';\nimport EventsDisplay from './EventsDisplay';\n\nconst AppOuterContainer = styled.div`\n  width: '100vw';\n\n  div {\n    box-sizing: border-box;\n  }\n`\n\nconst AppInnerContainer = styled.div`\n  max-width: 700px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 5px;\n  padding-right: 5px;\n`\n\nfunction App() {\n  return (\n    <AppOuterContainer>\n      <AppInnerContainer>\n        <Header />\n        <EventsDisplay />\n      </AppInnerContainer>\n    </AppOuterContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}