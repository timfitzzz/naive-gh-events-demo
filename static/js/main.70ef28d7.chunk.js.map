{"version":3,"sources":["npm-logo.svg","gh.svg","Header.js","EventsDisplay.js","ToggleSwitch.js","DropDownSelector.js","SourceSelector.js","OptionsPanel.js","DisplayOptions.js","hooks/useRenderOptions.js","hooks/useEvents.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderContainer","styled","div","NaiveEventsTitle","NaiveEventsDescriptionContainer","NaiveEventsDescription","NaiveEventsDescriptionTitle","NaiveIcon","img","Header","href","src","GHlogo","Npmlogo","EventsListContainer","EventsList","ReactMarkdown","LoadingContainer","LoadingText","PlainEventsList","PlainEventsLine","EventsGroupDate","EventsDisplay","loaded","options","events","display","renderedEventGroups","useMemo","Naive","renderEvents","map","event","i","md","startDate","endDate","renderedEventCollections","join","plainEntry","hanging","ToggleButtonLabel","label","ToggleButtonInput","input","ToggleButtonSlider","span","p","state","ToggleSwitch","name","toggleCb","type","value","onClick","e","preventDefault","DropDownContainer","DropDownTopContainer","DropDownDescription","DropDownSelector","description","disabled","setter","setAsNumber","defaultValue","onChange","parseInt","target","option","SourceSelectorContainer","SourceSelectorItemContainer","SourceSelectorErrorContainer","SourceSelectorLabel","SourceSelectorRadioButton","current","SourceSelectorInputField","SourceSelectorInputSaveButton","button","ExpandSymbol","open","SourceSelector","source","selectSource","sourceError","useState","userInput","setUserInput","handleUserSubmit","placeholder","OptionsContainer","ToggleSwitchesContainer","ToggleSwitchContainer","ToggleLabel","TextInput","textarea","DropDownsContainer","descriptionsTable","collapse","dateSummaries","dateContent","omitContent","indentContent","newLinesBetween","sortBy","groupStartDay","groupByDays","dateTimeFormatOptions","reverseSortEvents","markPrivate","privateMarker","omitPrivateLinks","italicizePrivateLinks","droptions","OptionsPanelTitle","OptionsPanel","sourceControls","changeOptions","error","dateTimeFormatState","setDateTimeFormatState","textInput","setTextInput","toggle","switchName","useEffect","JSON","stringify","json","Object","getOwnPropertyNames","filter","n","toggleName","sortby","DateTime","DisplayOptionsContainer","DisplayOptionsPanelTitle","DisplayOptionsToggleSwitch","DisplayOptions","setDisplay","useRenderOptions","Date","DATE_FULL","setOptions","newOptionsFragment","assign","useEvents","setError","setSource","setEvents","axios","request","then","data","length","err","response","status","parsedEvents","parse","validateTextInputAndUpdateEvents","AppOuterContainer","AppInnerContainer","EventsListHeader","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70ef28d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/npm-logo.3cad4cc6.svg\";","export default __webpack_public_path__ + \"static/media/gh.04be58c1.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport Npmlogo from './npm-logo.svg'\nimport GHlogo from './gh.svg'\n\nconst HeaderContainer = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: left;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-self: baseline;\n  font-size: 30px;\n  width: 100%;\n  font-weight: bolder;\n  color: purple;\n  box-sizing: border-box;\n`\n\nconst NaiveEventsTitle = styled.div`\n  margin-bottom: auto;\n  margin-top: auto;\n  font-size: 20px;\n  \n`\n\nconst NaiveEventsDescriptionContainer = styled.div`\n  border: 2px solid thistle;\n\n  margin: 4px 0 4px auto;\n  border-radius: 10px;\n  padding: 4px 0px 8px 8px;\n\n\n  @media (min-width: 600px) {\n    width: 45%;\n  }\n  @media (max-width: 599px) {\n    width: 100%;\n  }\n`\n\nconst NaiveEventsDescription = styled.div`\n  font-size: 12px;\n  font-weight: normal;\n\n\n`\n\nconst NaiveEventsDescriptionTitle = styled.div`\n  font-weight: bold;\n  display: flex;\n  flex-direction: row;\n  margin-top: 0px;\n  margin-bottom: 4px;\n  font-size: 12px;\n  align-content: center;\n  a {\n    > span {\n      margin-top: auto;\n      bottom: auto;\n    }\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n`\n\n\nconst NaiveIcon = styled.img`\n  max-height: 15px;\n  margin-left: 5px;\n`\n\n\n\nexport const Header = () => {\n\n  return (\n    <HeaderContainer>\n      <NaiveEventsTitle>naive-gh-events demo</NaiveEventsTitle>\n      <NaiveEventsDescriptionContainer>\n        <NaiveEventsDescriptionTitle>\n          <a href=\"https://github.com/timfitzzz/naive-gh-events\">\n          naive-gh-events</a>\n          <a href=\"https://github.com/timfitzzz/naive-gh-events\"><NaiveIcon src={GHlogo}/>\n          </a><a href=\"https://www.npmjs.com/package/naive-gh-events\">\n          <NaiveIcon src={Npmlogo}/></a>\n        </NaiveEventsDescriptionTitle>       \n        <NaiveEventsDescription>\n          Render event objects from the GitHub API as natural English, in plaintext or markdown. By <a href={\"https://github.com/timfitzzz\"}>timfitzzz</a>.\n\n        </NaiveEventsDescription>\n      </NaiveEventsDescriptionContainer>\n    </HeaderContainer>\n  )\n\n}\n\nexport default Header","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport Naive from 'naive-gh-events'\nimport ReactMarkdown from 'react-markdown'\n\nconst EventsListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst EventsList = styled(ReactMarkdown)`\n  max-width: 700px;\n  margin-left: 8px;\n  margin-right: 8px;\n  text-align: left;\n  font-size: 12px;\n  word-wrap: normal;\n\n  a {\n      color: purple;\n    }\n\n  a {\n    font-weight: bold;\n  }\n\n  ul {\n    margin-left: 20px;\n    padding-left: 5px;\n    border-left: 1px solid black;\n    border-top: 1px solid black;\n    border-bottom: 1px solid black;\n    border-bottom-left-radius: 5px;\n    border-top-left-radius: 5px;\n    list-style: none;\n  }\n\n  li {\n    padding: 5px;\n    padding-left: 10px;\n    margin-bottom: 5px;\n    background-color: purple;\n    color: white;\n\n    img {\n      width: 100%;\n    }\n\n    a {\n      color: thistle;\n    }\n\n    &:last-of-type {\n      margin-bottom: 0px;\n    }\n  }\n\n  > p {\n    &:first-of-type {\n      margin-top: 8px;\n    }\n  }\n`\n\nconst LoadingContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst LoadingText = styled.div`\n  margin: 20px auto auto auto;\n`\n\nconst PlainEventsList = styled.div`\n  font-family: monospace;\n  max-width: 700px;\n  overflow: wrap;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: left;\n  font-size: 12px;\n  margin-top: 14px;\n`\n\nconst PlainEventsLine = styled.div`\n  white-space: pre-wrap;       /* css-3 */\n  white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */\n  white-space: -pre-wrap;      /* Opera 4-6 */\n  white-space: -o-pre-wrap;    /* Opera 7 */\n  word-wrap: break-word;       /* Internet Explorer 5.5+ */\n`\n\nconst EventsGroupDate = styled.div`\n  text-align: left;\n  font-size: 15px;\n  width: 100%;\n  display: inline-block;\n  margin-top: 20px;\n  font-weight: bold;\n  color: purple;\n`\n\nconst EventsDisplay = ({loaded, options, events, display}) => {\n\n  const renderedEventGroups = useMemo(() => {\n    return events ? Naive.renderEvents(events, options) : null\n  }, [events, options])\n\n\n  return (\n    <EventsListContainer>\n      { renderedEventGroups && renderedEventGroups.map((event, i) => {\n        return options.md ? (\n            display ? (\n            <div key={'event'+ i}>\n              <EventsGroupDate>{event.startDate} - {event.endDate}</EventsGroupDate>\n              <EventsList>{event.renderedEventCollections.join(\"\")}</EventsList>\n            </div>\n          ) : <PlainEventsList>{event.renderedEventCollections.map((plainEntry, i) => <PlainEventsLine hanging={i === 0 ? false : true}>{plainEntry}</PlainEventsLine>)}</PlainEventsList>\n        ): (\n          <PlainEventsList>{event.renderedEventCollections.map((plainEntry, i) => <PlainEventsLine hanging={i === 0 ? false : true}>{plainEntry}</PlainEventsLine>)}</PlainEventsList>\n        )\n      })}\n      { !loaded && (\n        <LoadingContainer>\n          <LoadingText>Loading...</LoadingText>\n        </LoadingContainer>\n      )}\n    </EventsListContainer>\n  )\n}\n\nexport default EventsDisplay","import React from 'react'\nimport styled from 'styled-components'\n\nconst ToggleButtonLabel = styled.label`\n  position: relative;\n  display: inline-block;\n  min-width: 30px;\n  height: 17px;\n`\n\nconst ToggleButtonInput = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n  &:checked {\n    background-color: #2196F3\n  }\n\n  &:focus {\n    box-shadow: 0 0 1px #2196F3;\n  }\n`\n\nconst ToggleButtonSlider = styled.span`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .2s;\n  transition: .2s;\n  border-radius: 20px;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    height: 13px;\n    width: 13px;\n    left: 2px;\n    bottom: 2px;\n    background-color: white;\n    -webkit-transition: .2s;\n    transition: .2s;\n    border-radius: 50%;\n\n    ${p => p.state ? `\n      -webkit-transform: translateX(13px);\n      -ms-transform: translateX(13px);\n      transform: translateX(13px);\n    ` : ''}\n  }\n\n  ${p => p.state ? `\n    background-color: purple;\n    box-shadow: 0 0 1px #2196F3;\n  ` : '' }\n`\nconst ToggleSwitch = ({name, toggleCb, state}) => {\n  \n  return (\n    <ToggleButtonLabel> \n      <ToggleButtonInput type={'checkbox'} value={state} onClick={(e) => { e.preventDefault(); toggleCb(name)}}/>\n      <ToggleButtonSlider state={state}/>\n    </ToggleButtonLabel>\n  )\n}\n\nexport default ToggleSwitch","import React from 'react'\nimport styled from 'styled-components'\n\nconst DropDownContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 5px;\n  padding-top: 5px;\n  padding-left: 2px;\n  font-size: 10px;\n  margin-top: 0;\n  box-sizing: border-box;\n\n  @media (max-width: 599px) {\n    min-width: 47%;\n  }\n  @media (min-width: 600px) {\n    min-width: 20%;\n  }\n\n  select {\n    font-size: 10px;\n  }\n`\n\nconst DropDownTopContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 0;\n  margin-bottom: auto;\n  > span {\n\n    margin-right: 10px;\n  }\n`\n\nconst DropDownDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 10px;\n  font-weight: normal;\n  margin-top: 1px;\n`\n\nconst DropDownSelector = ({description, disabled, name, options, state, setter, setAsNumber}) => {\n\n  return (\n    <DropDownContainer>\n      <DropDownTopContainer>\n        <span>{name}</span>\n        <select defaultValue={state} disabled={disabled} name={name} onChange={(e) => { setter({ [name]: setAsNumber ? parseInt(e.target.value) : e.target.value })}}>\n          { options.map(option => \n            <option key={'option'+option.value} value={option.value} >{option.description}</option>\n          )}\n        </select>\n      </DropDownTopContainer>\n      <DropDownDescription>\n        {description}\n      </DropDownDescription>\n    </DropDownContainer>\n\n  )\n}\n\nexport default DropDownSelector","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst SourceSelectorContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  font-size: 10px;\n  margin-bottom: 5px;\n`\n\nconst SourceSelectorItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-right: 20px;\n`\n\nconst SourceSelectorErrorContainer = styled(SourceSelectorItemContainer)`\n  color: maroon;\n`\n\nconst SourceSelectorLabel = styled.div`\n  margin-top: auto;\n  margin-bottom: auto;\n  display: flex;\n  flex-direction: row;\n`\n\nconst SourceSelectorRadioButton = styled.div`\n\n  height: 10px;\n  width: 10px;\n  border-radius: 50%;\n  border: 3px solid purple;\n  background-color: ${p => p.current ? 'white' : 'purple'};\n  margin-top: auto;\n  margin-bottom: auto;\n  margin-right: 5px;\n\n`\n\nconst SourceSelectorInputField = styled.input`\n  font-size: 10px;\n`\n\nconst SourceSelectorInputSaveButton = styled.button`\n  font-size: 10px;\n`\n\nconst ExpandSymbol = styled.div`\n  margin-left: 5px;\n  transform: ${p => p.open ? `rotate(180deg)` : `rotate(90deg)`};\n\n\n`\n\nexport const SourceSelector = ({source, selectSource, sourceError}) => {\n\n  let [userInput, setUserInput] = useState(\"\")\n\n  function selectDefault() {\n    selectSource({type: 'default'})\n  }\n\n  function handleInputValueChange(e) {\n    setUserInput(e.target.value)\n  }\n  \n  function handleUserSubmit() {\n    selectSource({type: 'user', value: userInput})\n  }\n\n  return (\n    <SourceSelectorContainer>\n      <SourceSelectorItemContainer>\n        <SourceSelectorRadioButton \n          onClick={() => selectDefault()} current={source && source.type === 'default' ? true : false}\n        /> \n        <SourceSelectorLabel>\n          use GitHub public events feed\n        </SourceSelectorLabel>\n      </SourceSelectorItemContainer>\n      <SourceSelectorItemContainer>\n        <SourceSelectorRadioButton \n          onClick={(e) => {userInput && handleUserSubmit()}} \n          current={source && source.type === 'user' ? true : false}\n        />\n        <SourceSelectorInputField \n          value={userInput} \n          onChange={handleInputValueChange} \n          placeholder={\"GitHub username\"}\n        />\n        <SourceSelectorInputSaveButton \n          onClick={handleUserSubmit} \n          disabled={userInput ? false : true}>\n            get feed\n        </SourceSelectorInputSaveButton>\n      </SourceSelectorItemContainer>\n      <SourceSelectorItemContainer>\n        <SourceSelectorRadioButton \n          onClick={(e) => {selectSource({type: 'input'})}} \n          current={source && source.type === 'input' ? true : false }\n        />\n        <SourceSelectorLabel>\n          custom events JSON\n          <ExpandSymbol open={source && source.type === 'input' ? true : false }>▲</ExpandSymbol> \n        </SourceSelectorLabel>\n      </SourceSelectorItemContainer>\n      <SourceSelectorErrorContainer>\n        {sourceError}\n      </SourceSelectorErrorContainer>\n    </SourceSelectorContainer>\n\n  )\n\n\n}","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { DateTime } from 'luxon'\n\nimport ToggleSwitch from './ToggleSwitch'\nimport DropDownSelector from './DropDownSelector'\nimport { SourceSelector } from './SourceSelector'\n\nconst OptionsContainer = styled.div`\n  background-color: thistle;\n  padding: 2px 8px 8px 8px;\n  border-radius: 8px;\n  width: 100%;\n`\n\nexport const ToggleSwitchesContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\n\nexport const ToggleSwitchContainer = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  margin-bottom: 5px;\n`\n\nexport const ToggleLabel = styled.div`\n\n  font-size: 10px;\n  margin-left: 6px;\n  margin-top: 0;\n  margin-bottom: auto;\n  > span {\n    font-weight: normal;\n    margin-left: 5px;\n  }\n\n`\n\nexport const TextInput = styled.textarea`\n  font-size: 0.4em;\n  width: 100%;\n  resize: vertical;\n  height: 250px;\n  margin-right: 3px;\n  box-sizing: border-box;\n\n`\n\nconst DropDownsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-bottom: 5px;\n  max-width: 700px;\n  margin-top: 5px;\n  align-items: top;\n  justify-content: space-between;\n`\n\n\n\nlet descriptionsTable = {\n  collapse: 'combine similar events',\n  dateSummaries: 'prepend dates to summary lines',\n  dateContent: 'prepend dates to content lines',\n  md: 'render as markdown',\n  omitContent: 'display only summaries',\n  indentContent: 'indent content lines',\n  newLinesBetween: 'add extra line between items',\n  sortBy: 'display order',\n  groupStartDay: 'day of week to start first group from',\n  groupByDays: 'number of days of events to group together',\n  dateTimeFormatOptions: 'example Luxon display format',\n  startDate: 'filter out prior events',\n  reverseSortEvents: 'reverse sortBy',\n  markPrivate: 'append marker to private event summaries',\n  privateMarker: 'marker to append to private event summaries',\n  omitPrivateLinks: `don't link to private event subjects, targets, or parents`,\n  italicizePrivateLinks: 'italicize link text for private event subjects, targets, or parents'\n\n}\n\nconst droptions = {\n  sortBy: [\n    { value: 'date', description: 'date'},\n    { value: 'actor', description: 'actor (user)'},\n    { value: 'type', description: 'event type'},\n    { value: 'parent', description: 'parent of action'}\n  ],\n  groupByDays: [\n    { value: 1, description: '1 day'},\n    { value: 3, description: '3 days'},\n    { value: 7, description: '7 days'},\n    { value: 14, description: '14 days'},\n    { value: 30, description: '30 days'}\n  ],\n  groupStartDay: [\n    { value: 0, description: 'sunday'},\n    { value: 1, description: 'monday'},\n    { value: 2, description: 'tuesday'},\n    { value: 3, description: 'wednesday'},\n    { value: 4, description: 'thursday'},\n    { value: 5, description: 'friday'},\n    { value: 6, description: 'saturday'}\n  ],\n  dateTimeFormatOptions: [\n    { value: 'DATE_FULL', description: 'month, day, year'},\n    { value: 'DATETIME_FULL', description: 'month, day, year, time'},\n    { value: 'DATETIME_FULL_WITH_SECONDS', description: 'month, day, year, time:seconds'}\n  ]\n}\n\nexport const OptionsPanelTitle = styled.div`\n  font-size: 16px;\n  margin-bottom: 8px;\n`\n\nexport const OptionsPanel = ({events, sourceControls, changeOptions, options, error }) => {\n\n  let [dateTimeFormatState, setDateTimeFormatState] = useState('DATE_FULL')\n  let [source, selectSource] = sourceControls\n  let [textInput, setTextInput] = useState(\"\")\n\n\n  useEffect(() => {\n    if (source && source.type === 'input' && (!source.value || source.value !== textInput)) {\n      setTextInput(JSON.stringify(events, null, 2))\n    }\n  }, [source, events, textInput])\n\n  \n  function updateSourceText(json) {\n    setTextInput(json)\n    selectSource({type: 'input', value: json})\n  }\n\n  function toggle(switchName) {\n    changeOptions({ [switchName]: !options[switchName]})\n  }\n\n  function setDateTimeFormat({ dateTimeFormatOptions }) {\n    setDateTimeFormatState(dateTimeFormatOptions)\n    changeOptions({ dateTimeFormatOptions: DateTime[dateTimeFormatOptions]})\n  }\n\n  return (\n    <OptionsContainer>\n      <OptionsPanelTitle>source</OptionsPanelTitle>\n      <SourceSelector source={source} selectSource={selectSource} sourceError={error}/>\n      { source && source.type === 'input' ? <TextInput value={textInput} onChange={(e) => {updateSourceText(e.target.value)}}/> : <></> }\n      <OptionsPanelTitle>render options</OptionsPanelTitle>\n      <ToggleSwitchesContainer>\n        { Object.getOwnPropertyNames(options).filter(n => typeof options[n] === 'boolean').map(toggleName =>\n          <ToggleSwitchContainer key={toggleName+'toggler'}>\n            <ToggleSwitch name={toggleName} toggleCb={toggle} state={options[toggleName]}/>\n            <ToggleLabel>{toggleName}<span>{descriptionsTable[toggleName]}</span></ToggleLabel>\n          </ToggleSwitchContainer>\n        )}\n      </ToggleSwitchesContainer>\n      <DropDownsContainer>\n          <DropDownSelector \n            description={descriptionsTable.sortby} \n            name={'sortBy'} \n            options={droptions['sortBy']} \n            state={options['sortBy']} \n            setter={changeOptions}\n          />\n          <DropDownSelector \n            description={descriptionsTable.groupByDays} \n            name={'groupByDays'} \n            options={droptions['groupByDays']} \n            state={options['groupByDays']} \n            setter={changeOptions} \n            setAsNumber={true}\n          />\n          <DropDownSelector \n            description={descriptionsTable.groupStartDay} \n            name={'groupStartDay'} \n            options={droptions['groupStartDay']} \n            state={options['groupStartDay']} \n            setter={changeOptions} \n            setAsNumber={true}\n          />\n          <DropDownSelector \n            description={descriptionsTable.dateTimeFormatOptions}\n            name={'dateTimeFormatOptions'}\n            options={droptions['dateTimeFormatOptions']}\n            state={dateTimeFormatState}\n            setter={setDateTimeFormat}\n          />\n      </DropDownsContainer>\n    </OptionsContainer>\n  )\n\n\n}\n\nexport default OptionsPanel","import React from 'react'\nimport styled from 'styled-components'\nimport ToggleSwitch from './ToggleSwitch'\nimport { ToggleSwitchContainer, ToggleLabel } from './OptionsPanel'\n\n\nconst DisplayOptionsContainer = styled.div`\n  background-color: white;\n  padding: 2px 8px 8px 8px;\n  border-radius: 8px;\n  border: 1px solid thistle;\n  width: 100%;\n  margin-top: 4px;\n`\n\nexport const DisplayOptionsPanelTitle = styled.div`\n  font-size: 16px;\n  margin-bottom: 8px;\n`\n\nexport const DisplayOptionsToggleSwitch = styled(ToggleSwitch)`\n  div { \n    color: purple;\n  }\n`\n\n\nexport const DisplayOptions = ({display, setDisplay}) => \n  <DisplayOptionsContainer>\n    <DisplayOptionsPanelTitle>display options</DisplayOptionsPanelTitle>\n    <ToggleSwitchContainer>\n      <DisplayOptionsToggleSwitch name={'render markdown via react-markdown'} toggleCb={() => setDisplay(!display)} state={display} />\n      <ToggleLabel><span>render markdown as html via <a href=\"https://github.com/remarkjs/react-markdown\">react-markdown</a> or show raw</span></ToggleLabel>\n    </ToggleSwitchContainer>\n    \n  </DisplayOptionsContainer>\n\nexport default DisplayOptions","import { DateTime } from \"luxon\"\nimport { useState } from \"react\"\n\nexport const useRenderOptions = () => {\n\n  let [options, setOptions] = useState({\n    sortBy: 'date',\n    collapse: true,\n    dateSummaries: false,\n    dateContent: false,\n    groupByDays: 7,\n    groupStartDay: 0,\n    startDate: new Date(1/1/1970),\n    md: true,\n    omitContent: false,\n    indentContent: true,\n    dateTimeFormatOptions: DateTime.DATE_FULL,\n    newLinesBetween: true,\n    reverseSortEvents: false,\n    markPrivate: false,\n    privateMarker: 'Ꙫ',\n    omitPrivateLinks: false,\n    italicizePrivateLinks: false\n  })\n\n  const changeOptions = (newOptionsFragment) => {\n    setOptions(Object.assign({}, options, newOptionsFragment))\n  }\n\n  return [options, changeOptions]\n\n}\n\nexport default useRenderOptions","import axios from \"axios\";\nimport { useState, useEffect } from \"react\"\n\nconst useEvents = () => {\n\n  // source: { type: 'default' || 'user' || 'input', value?: string }\n  let [error, setError] = useState(null)\n  let [source, setSource] = useState({type: 'default'})\n  let [events, setEvents] = useState(null)\n  // let loaded = useState(false)\n\n  const selectSource = ({type, value}) => {\n    if (type === 'input' && !value && events) {\n      setSource({ type, value: JSON.stringify(events, null, 2)})\n    } else {\n      setSource({ type, value })\n    }\n  }\n\n  useEffect(()=> {\n\n    function validateTextInputAndUpdateEvents() {\n      let parsedEvents;\n  \n      if (source.type === 'input') {\n        try {\n          parsedEvents = JSON.parse(source.value)\n        } catch (e) {\n          setError('JSON invalid')\n        }\n        setError(null)\n        setEvents(parsedEvents)\n      }\n    }\n\n    if (source.type !== 'input') {\n      axios.request(source.type === 'user' && source.value ? `https://api.github.com/users/${source.value}/events?per_page=100` \n                                                          : 'https://api.github.com/events?per_page=100'\n      ).then(data =>  {\n        if(data.data.length < 1) {\n          setError('No events in last 90 days')\n        }\n        setEvents(data.data)\n        // setLoaded(true)\n      }, err => {\n        if(err.response.status === 404) {\n          setEvents(null)\n          // setLoaded(true)\n          setError('GitHub user not found')\n        } else if (err.response.status === 403) {\n          setEvents(null)\n          // setLoaded(true)\n          setError('403, API limits likely exceeded')\n        }\n      })\n    } else {\n      validateTextInputAndUpdateEvents()\n    }\n  }, [source])\n\n  return [events, source, error, selectSource]\n}\n\nexport default useEvents","import { useState } from 'react'\nimport styled from 'styled-components'\nimport Header from './Header';\nimport EventsDisplay from './EventsDisplay';\nimport DisplayOptions from './DisplayOptions';\nimport OptionsPanel from './OptionsPanel';\nimport { useRenderOptions } from './hooks/useRenderOptions';\nimport useEvents from './hooks/useEvents';\n\nconst AppOuterContainer = styled.div`\n  width: '100vw';\n\n  div {\n    box-sizing: border-box;\n  }\n`\n\nconst AppInnerContainer = styled.div`\n  max-width: 700px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 5px;\n  padding-right: 5px;\n`\n\nconst EventsListHeader = styled.div`\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  justify-self: baseline;\n  font-size: 30px;\n  width: 100%;\n  font-weight: bolder;\n  color: purple;\n`\n\nfunction App() {\n\n  let [options, changeOptions] = useRenderOptions()\n  let [events, source, error, selectSource] = useEvents(options)\n  let [display, setDisplay] = useState(true)\n\n  return (\n    <AppOuterContainer>\n      <AppInnerContainer>\n        <Header />\n        <EventsListHeader>\n          <OptionsPanel events={events} sourceControls={[source, selectSource]} changeOptions={changeOptions} options={options} error={error}/>\n          <DisplayOptions display={display} setDisplay={setDisplay}/>\n        </EventsListHeader>\n        <EventsDisplay options={options} events={events} display={display}/>\n      </AppInnerContainer>\n    </AppOuterContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}